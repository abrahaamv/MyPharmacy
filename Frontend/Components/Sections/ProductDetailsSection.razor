@using Services
@using Clients
@inject ProductsClient Client
@inject ProductService ProductService

<!-- Breadcrumb Section Begin -->
<div id="breadcrumb-container">
    <nav class="breadcrumb container" aria-label="Breadcrumb">
        <ol class="breadcrumb-list container">
            <li class="breadcrumb__item">
                <a href="/" class="breadcrumb__link">
                    <svg class="breadcrumb__icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                        <polyline points="9 22 9 12 15 12 15 22"></polyline>
                    </svg>
                    <span class="visually-hidden">Inicio</span>
                </a>
            </li>
            <li class="breadcrumb__item">
                <span class="breadcrumb__divider">/</span>
                <a href="/productos" class="breadcrumb__link">Productos</a>
            </li>
            <li class="breadcrumb__item">
                <span class="breadcrumb__divider">/</span>
                <a href="/productos/@Category" class="breadcrumb__link">@Category</a>
            </li>
            <li class="breadcrumb__item">
                <span class="breadcrumb__divider">/</span>
                <span class="breadcrumb__link">@Product?.Name</span>
            </li>
        </ol>
    </nav>
</div>
<!-- Breadcrumb Section End -->

@if (IsLoading)
{
    <p>Cargando producto...</p>
}
else if (Product == null)
{
    <p>Error: No se pudo cargar el producto.</p>
}
else
{
    <!-- Product Details Section Begin -->
    <section class="product-details spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 col-md-6">
                    <div class="product__details__pic">
                        <div class="product__details__pic__item">
                            <img class="product__details__pic__item--large"
                                 src="@Product.ImageUrls.First()" alt="@Product.Name">
                        </div>
                        <div class="product__details__pic__slider owl-carousel">
                            @foreach (var imageUrl in Product.ImageUrls)
                            {
                                <img data-imgbigurl="@imageUrl" src="@imageUrl" alt="@Product.Name">
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <div class="product__details__text">
                        <h3>@Product.Name</h3>
                        <div class="product__details__rating">
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star-half-o"></i>
                            <span>(18 reviews)</span>
                        </div>
                        <div class="product__details__price">Q @Product.SellingPrice.ToString("F2")</div>
                        <p>@Product.Description</p>
                        <div class="product__details__quantity">
                            <div class="quantity">
                                <div class="pro-qty">
                                    <input type="text" value="1">
                                </div>
                            </div>
                        </div>
                        <a href="#" class="primary-btn">ADD TO CART</a>
                        <a href="#" class="heart-icon"><span class="icon_heart_alt"></span></a>
                        <ul>
                            <li><b>Availability</b> <span>@(Product.IsInStock ? "In Stock" : "Out of Stock")</span></li>
                            <li><b>Shipping</b> <span>01 day shipping. <samp>Free pickup today</samp></span></li>
                            <li><b>Brand ID</b> <span>@Product.BrandId</span></li>
                            <li><b>Share on</b>
                                <div class="share">
                                    <a href="#"><i class="fa fa-facebook"></i></a>
                                    <a href="#"><i class="fa fa-twitter"></i></a>
                                    <a href="#"><i class="fa fa-instagram"></i></a>
                                    <a href="#"><i class="fa fa-pinterest"></i></a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="product__details__tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" href="#tabs-1" role="tab"
                                   aria-selected="true">Description</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tabs-2" role="tab"
                                   aria-selected="false">Information</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tabs-3" role="tab"
                                   aria-selected="false">Reviews <span>(1)</span></a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tabs-1" role="tabpanel">
                                <div class="product__details__tab__desc">
                                    <h6>Product Information</h6>
                                    <p>@Product.Description</p>
                                </div>
                            </div>
                            <!-- Additional Tabs -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Product Details Section End -->
}

<!-- Related Product Section Begin -->
<section class="related-product">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-title related__product__title">
                    <h2>Productos Relacionados</h2>
                </div>
            </div>
        </div>
        <div class="row">
            @if (RelatedProducts.Any())
            {
                foreach (var relatedProduct in RelatedProducts)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="product__item">
                            <div class="product__item__pic">
                                <img src="@relatedProduct.ImageUrls.FirstOrDefault()" alt="@relatedProduct.Name">
                                <ul class="product__item__pic__hover">
                                    <li>
                                        <a href="/productos/@relatedProduct.Category/@relatedProduct.Slug">
                                            <i class="fa fa-info"></i>
                                        </a>
                                    </li>
                                    <li><a href="#"><i class="fa fa-heart"></i></a></li>
                                    <li><a href="#"><i class="fa fa-shopping-cart"></i></a></li>
                                </ul>
                            </div>
                            <div class="product__item__text">
                                <h6>
                                    <a href="/productos/@relatedProduct.Category/@relatedProduct.Slug">
                                        @relatedProduct.Name
                                    </a>
                                </h6>
                                <h5>Q @relatedProduct.SellingPrice.ToString("F2")</h5>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No hay productos relacionados disponibles.</p>
            }
        </div>
    </div>
</section>

<!-- Related Product Section End -->
@code {
    [Parameter]
    public string? Category { get; set; }
    
    [Parameter]
    public string? Slug { get; set; }

    private ProductDetails? Product { get; set; }
    private ProductSummary? CurrentProductSummary { get; set; }
    private bool IsLoading { get; set; } = true;

    private List<ProductSummary> RelatedProducts { get; set; } = new();

 protected override async Task OnParametersSetAsync()
{
    IsLoading = true;
    try
    {
        // Obtener los detalles del producto actual
        Product = await ProductService.GetProductBySlugAsync(Slug!);

        // Encontrar el ProductSummary basado en el Slug
        CurrentProductSummary = ProductService.Products!
            .FirstOrDefault(p => p.Slug.Equals(Slug, StringComparison.OrdinalIgnoreCase));

        if (Product != null && CurrentProductSummary != null)
        {
            // Obtener productos de la misma subcategoría, excluyendo el producto actual
            var productsInSameSubCategory = ProductService.Products!
                .Where(p =>
                    p.SubCategory?.Trim().Equals(CurrentProductSummary.SubCategory?.Trim(), StringComparison.OrdinalIgnoreCase) == true &&
                    p.Id != CurrentProductSummary.Id)
                .ToList();

            // Si hay menos de 4 productos en la subcategoría, completar con productos de la misma categoría
            if (productsInSameSubCategory.Count < 4)
            {
                var productsInSameCategory = ProductService.Products!
                    .Where(p =>
                        p.Category?.Trim().Equals(CurrentProductSummary.Category?.Trim(), StringComparison.OrdinalIgnoreCase) == true &&
                        p.Id != CurrentProductSummary.Id)
                    .ToList();

                // Unir ambas listas y remover duplicados
                var allRelatedProducts = productsInSameSubCategory
                    .Concat(productsInSameCategory)
                    .GroupBy(p => p.Id)
                    .Select(g => g.First())
                    .ToList();

                RelatedProducts = allRelatedProducts
                    .OrderBy(_ => Guid.NewGuid()) // Mezclar aleatoriamente
                    .Take(4)
                    .ToList();
            }
            else
            {
                RelatedProducts = productsInSameSubCategory
                    .OrderBy(_ => Guid.NewGuid())
                    .Take(4)
                    .ToList();
            }
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error fetching product or related products: {ex.Message}");
        Product = null;
        RelatedProducts = new List<ProductSummary>();
    }
    finally
    {
        IsLoading = false;
    }
}

}
